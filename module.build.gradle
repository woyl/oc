if (dynamicRunAlone.toBoolean() || homeRunAlone.toBoolean() || loginRunAlone.toBoolean()
        || messageRunAlone.toBoolean() || mineRunAlone.toBoolean() || appRunAlone.toBoolean() || baseRunAlone.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
////                arguments = [ moduleName : project.getName() ]
//            }
//        }

        kapt {
            arguments {
                arg("moduleName", project.getName())
            }
        }

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (dynamicRunAlone.toBoolean() || homeRunAlone.toBoolean() || loginRunAlone.toBoolean()
                    || messageRunAlone.toBoolean() || mineRunAlone.toBoolean() || appRunAlone.toBoolean()|| baseRunAlone.toBoolean()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/mainfest/AndroidManifest.xml'
                java {
                    exclude 'debug/**'
                }
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
